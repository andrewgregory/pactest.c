#!/bin/bash

fakechroot=0
fakeroot=0
gdb=0
libtool=0
valgrind=0
cmd=()

extend() {
    if which "$1" &>/dev/null; then
        cmd+=("$@")
    else
        # bailing out would be counted as a failure by test harnesses,
        # ignore missing programs so that tests can be gracefully skipped
        printf "warning: command '$1' not found\n" >&2
    fi
}

usage() {
    printf "ptrun - run an executable pacman test\n"
    printf "usage: ptrun [options] <testfile> [test-options]\n"
    printf "\n"
    printf "Options:\n"
    printf "   -c   fakechroot\n"
    printf "   -d   enable alpm debug log\n"
    printf "   -r   fakeroot\n"
    printf "   -g   gdb (implies -l)\n"
    printf "   -h   display help\n"
    printf "   -l   libtool execute\n"
    printf "   -s   preserve test environment\n"
    printf "   -v   valgrind (implies -l)\n"
}

while getopts cdghlrsv name; do
  case $name in
    c) fakechroot=1;;
    d) export PT_DEBUG=1;;
    g) libtool=1; gdb=1;;
    h) usage; exit;;
    l) libtool=1;;
    r) fakeroot=1;;
    s) export PT_KEEP_ROOT=1;;
    v) libtool=1; valgrind=1;;
  esac
done

[ $fakechroot -eq 1 ] && extend fakechroot
[ $fakeroot -eq 1 ] && extend fakeroot
[ $libtool -eq 1 ] && extend libtool execute
[ $gdb -eq 1 ] && extend gdb
[ $valgrind -eq 1 ] && extend valgrind --quiet --leak-check=full \
    --gen-suppressions=yes --error-exitcode=123 \
    --suppressions="$(dirname "$0")/../../valgrind.supp"

while (( --OPTIND > 0 )); do shift; done # remove our options from the stack

"${cmd[@]}" "$@"
